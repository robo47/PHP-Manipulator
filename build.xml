<?xml version="1.0" encoding="UTF-8"?>
<project name="PHP\Manipulator" basedir=".">

    <!-- Clean Project -->
    <target name="clean">
        <delete dir="${basedir}/build"          failonerror="false" />
        <delete dir="${basedir}/tests/tmp"      failonerror="false" />
        <delete dir="${basedir}/website/api"    failonerror="false" />
        <mkdir dir="${basedir}/tests/tmp" />
    </target>

    <!-- Prepare -->
    <target name="prepare">
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/docs" />
        <mkdir dir="${basedir}/build/reports" />
        <mkdir dir="${basedir}/tests/tmp" />
    </target>

    <!-- Generate apidocs with doxygen -->
    <target name="apidocs">
        <delete dir="${basedir}/build/apidocs" failonerror="false" />
        <mkdir dir="${basedir}/build/apidocs" />
        <exec dir="${basedir}"
            executable="doxygen"
            failonerror="true">
        </exec>
    </target>

    <!-- Run php lint check on lib, tests and fixtures -->
    <target name="phplint">
        <parallel threadCount="4" failonany="true">
            <apply executable   = "php"
                   failonerror  = "true">
                <arg value="-nl" />
                <fileset dir="PHP">
                    <include name="**/*.php" />
                </fileset>
            </apply>
            <apply executable   = "php"
                   failonerror  = "true">
                <arg value="-nl" />
                <fileset dir="tests/">
                    <include name="**/*.php" />
                    <include name="**/phtml" />
                </fileset>
            </apply>
        </parallel>
    </target>

    <!-- Run phpcpd -->
    <target name="phpcpd">
        <exec dir="${basedir}"
            executable="phpcpd"
            failonerror="false">
            <arg line="--log-pmd &quot;${basedir}/build/logs/pmd.xml&quot; &quot;${basedir}/PHP&quot;"/>
        </exec>
    </target>

    <!-- Run PDepend -->
    <target name="pdepend">
        <exec dir="${basedir}"
            executable="pdepend"
            failonerror="false">
            <arg line="--jdepend-xml=&quot;${basedir}/build/logs/jdepend.xml&quot; &quot;${basedir}/PHP&quot;"/>
        </exec>
    </target>

    <!-- Run PHP_Codesniffer -->
    <target name="phpcs">
        <exec dir="${basedir}"
            executable="phpcs"
            output="${basedir}/build/logs/checkstyle.xml"
            failonerror="false">
            <arg line="--report=checkstyle --standard=ZF2 &quot;${basedir}/PHP&quot;"/>
        </exec>
    </target>

    <!-- Run PHPUnit for library -->
    <target name="phpunit">
        <exec dir="${basedir}/tests/"
            executable="phpunit"
            failonerror="false">
            <arg line="--no-configuration
                       --configuration &quot;${basedir}/tests/phpunit.xml.dist&quot;
                       --log-junit &quot;${basedir}/build/logs/junit-lib.xml&quot;
                       --coverage-html &quot;${basedir}/build/reports/coverage-lib/&quot;
                       --coverage-clover &quot;${basedir}/build/logs/clover-lib.xml&quot;" />
        </exec>
    </target>

    <!-- Run PHPUnit for Tests (Constraints, Stubs, TestCase, Util, ... ) -->
    <target name="phpunitTestcode">
        <exec dir="${basedir}/tests/"
            executable="phpunit"
            failonerror="true">
            <arg line="--no-configuration
                       --configuration &quot;${basedir}/tests/phpunitTests.xml.dist&quot;
                       --log-junit &quot;${basedir}/build/logs/junit-tests.xml&quot;
                       --coverage-html &quot;${basedir}/build/reports/coverage-tests/&quot;
                       --coverage-clover &quot;${basedir}/build/logs/clover-tests.xml&quot;" />
        </exec>
    </target>

    <!-- Run PHP_CodeBrowser -->
    <target name="phpcb">
        <mkdir dir="${basedir}/build/reports/phpcb" />
        <exec executable="phpcb" dir="${basedir}/build/reports/phpcb/">
            <arg line="--log &quot;${basedir}/build/logs/&quot;
        --source &quot;${basedir}/PHP/&quot;
        --output &quot;${basedir}/build/reports/phpcb/&quot;" />
        </exec>
    </target>

    <!-- Create pear package -->
    <target name="package">

        <tstamp>
            <format property="pear_package_date" pattern="yyyy-MM-dd"/>
        </tstamp>
        <tstamp>
            <format property="pear_package_time" pattern="HH:mm:ss"/>
        </tstamp>

        <mkdir dir="build/package/PHP"/>
        <mkdir dir="build/package/tests"/>

        <copy todir="build/package/PHP/" >
            <fileset dir="${basedir}/PHP/" />
        </copy>

        <copy todir="build/package/tests/" >
            <fileset dir="${basedir}/tests/" />
        </copy>

        <copy file="phpmanipulator.php" tofile="build/package/phpmanipulator.php" />
        <copy file="LICENSE" tofile="build/package/LICENSE" />
        <copy file="README" tofile="build/package/README" />
        <copy file="TODO" tofile="build/package/TODO" />

        <exec command="git rev-list --max-count=1 HEAD" outputproperty="pear_package_git_hash" />

        <replace token="@pear_package_version@" value="${packageversion}" dir="build/package/PHP/">
            <include name="**/*.php" />
        </replace>

        <replace token="@pear_package_git_hash@" value="${pear_package_git_hash}" dir="build/package/PHP/">
            <include name="**/*.php" />
        </replace>

        <exec executable="${basedir}/create_pear_package_xml.php" dir="${basedir}">
            <arg line="${packageversion}" />
            <arg line="alpha" />
            <arg line="./build/package/" />
            <arg line="./package.xml.dist" />
        </exec>
        <exec executable="pear" dir="${basedir}/build/package/">
            <arg line="package" />
        </exec>

        <antcall target="testpackage" />

        <copy file="build/package/PHP_Manipulator-${packageversion}.tgz" tofile="PHP_Manipulator-${packageversion}.tgz" />
    </target>

    <!-- Test created PEAR-Package -->
    <target name="testpackage">
        <mkdir dir="build/test/" />

        <untar compression="gzip" src="build/package/PHP_Manipulator-${packageversion}.tgz" dest="build/test/" />

        <!-- run unittests -->
        <exec dir="${basedir}/build/test/"
            executable="pear"
            failonerror="true">
            <arg line="run-tests -r -u ./PHP_Manipulator-${packageversion}/tests"/>
        </exec>

        <!-- @todo Test the package contains the right files ? -->
    </target>

    <!-- Run Sloccount -->
    <target name="sloccount">
        <mkdir dir="${basedir}/build/logs/sloccount/" />
        <exec executable="sloccount"
              dir="${basedir}"
              output="${basedir}/build/logs/sloccount.sc"
              failonerror="false">
            <arg line="--duplicates --wide --details --addlangall --datadir &quot;${basedir}/build/logs/sloccount/&quot; &quot;${basedir}/PHP/&quot;"/>
        </exec>
    </target>

    <!-- Build complete Project -->
    <target name="build" depends="clean, prepare" >
        <antcall target="phplint" />
        <parallel threadCount="8" failonany="true">
            <antcall target="phpunit" />
            <antcall target="phpcs" />
            <antcall target="phpcpd" />
            <antcall target="pdepend" />
            <antcall target="sloccount" />
            <antcall target="phpunitTestcode" />
        </parallel>
        <antcall target="phpcb" />
    </target>

</project>
